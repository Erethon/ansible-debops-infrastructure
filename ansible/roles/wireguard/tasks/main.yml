---

- name: Generate private WG keys
  command:
    cmd: wg genkey
  args:
    creates: '{{ secret + "/wireguard/" + item + "/keys/privatekey" }}'
  delegate_to: 'localhost'
  become: False
  run_once: True
  loop: "{{ ansible_play_hosts }}"
  register: wg__private_keys
  tags: ["wireguard::genkeys"]

- name: Create required directories on Ansible controller
  file:
    dest: '{{ secret + "/wireguard/" + item.item + "/keys/" }}'
    state: directory
  delegate_to: 'localhost'
  become: False
  run_once: True
  loop: "{{ wg__private_keys.results }}"
  tags: ["wireguard::genkeys"]

- name: Save private keys to the controller secret stash
  copy:
    content: "{{ item.stdout }}"
    dest: '{{ secret + "/wireguard/" + item.item + "/keys/privatekey" }}'
  delegate_to: 'localhost'
  become: False
  run_once: True
  loop: "{{ wg__private_keys.results }}"
  when: item.changed
  tags: ["wireguard::genkeys"]

- name: Get public keys from private keys
  command: wg pubkey
  args:
    stdin: "{{ item.stdout }}"
    creates: '{{ secret + "/wireguard/" + item.item + "/keys/publickey" }}'
  delegate_to: 'localhost'
  loop: "{{ wg__private_keys.results }}"
  when: item.changed
  register: wg__public_keys
  tags: ["wireguard::genkeys"]

- name: Save public keys to the controller secret stash
  copy:
    content: "{{ item.stdout }}"
    dest: '{{ secret + "/wireguard/" + item.item.item + "/keys/publickey" }}'
  delegate_to: 'localhost'
  become: False
  run_once: True
  loop: "{{ wg__public_keys.results }}"
  when: item.changed
  tags: ["wireguard::genkeys"]

- name: Create /etc/wireguard directory
  file:
    name: "/etc/wireguard"
    state: "directory"

- name: Read private key and register it
  set_fact:
    _wireguard__private_key: "{{ lookup('file', secret + '/wireguard/' + item + '/keys/privatekey') }}"
  loop: "{{ ansible_play_hosts }}"

- name: Create wireguard config files
  template:
    src: wg.conf.j2
    dest: "/etc/wireguard/wg0.conf"
    mode: 0600
  become: True
